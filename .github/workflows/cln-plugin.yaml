\name: CI tests for CLN watchtower-plugin

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  bitcoind_version: 0.20.1
  cln_version: 0.12.1

jobs:
  cache-cln:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Create CLN cache
        id: cache-cln
        uses: actions/cache@v2
        env:
          cache-name: cache-cln-dev
        with:
          path: lightning
          key: ${{ runner.os }}-build-${{ env.cache-name }}-v${{ env.cln_version }}
      - name: Compile CLN
        env: 
          PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
        if: ${{ steps.cache-cln.outputs.cache-hit != 'true' }}
        run: |
          sudo apt-get update && sudo apt-get install gettext
          git clone https://github.com/ElementsProject/lightning.git && cd lightning && git checkout v${{ env.cln_version }}
          pip install --user poetry && poetry install
          ./configure --enable-developer && poetry run make

  cln-plugin:
    needs: cache-cln
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        rust-version: [1.55.0, stable]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - name: Install bitcoind
        run: |
          wget https://bitcoincore.org/bin/bitcoin-core-${{ env.bitcoind_version }}/bitcoin-${{ env.bitcoind_version }}-x86_64-linux-gnu.tar.gz
          tar -xzf bitcoin-${{ env.bitcoind_version }}-x86_64-linux-gnu.tar.gz
          ln -s $(pwd)/bitcoin-${{ env.bitcoind_version }}/bin/bitcoin* /usr/local/bin
      - name: Load CLN cache
        id: cache-cln
        uses: actions/cache@v2
        env:
          cache-name: cache-cln-dev
        with:
          path: lightning
          key: ${{ runner.os }}-build-${{ env.cache-name }}-v${{ env.cln_version }}
      - name: Link CLN
        run: |
          cd lightning && sudo make install
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: ${{ matrix.rust-version }}
      - name: Install dependencies
        run: |
          cargo install --locked --path teos
          cargo install --locked --path watchtower-plugin
          cd watchtower-plugin/tests && pip install --user poetry && poetry install
      - name: Run tests
        run: |
          cd watchtower-plugin/tests
          DEVELOPER=1 SLOW_MACHINE=1 poetry run pytest test.py --log-cli-level=INFO -s
